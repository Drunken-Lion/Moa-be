name: ci

on:
  pull_request:
    branches:
      - dev

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: server2
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpassword
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v3

      - name: create application.yml
        run: |
          touch ./application.yml
          echo '${{ secrets.TEST_APPLICATION_YML }}' >> ./application.yml

      - name: create application-secret.yml
        run: |
          touch ./application-secret.yml
          echo '${{ secrets.TEST_APPLICATION_SECRET_YML }}' >> ./application-secret.yml

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: Use Gradle 8.8
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-wrapper-file: 'gradlew'
          distribution: 'gradle-8.8'
          arguments: -i test

      - name: Wait for MySQL to be ready
        run: |
          until mysql -h localhost -u testuser -p"testpassword" -e "SHOW DATABASES;" > /dev/null 2>&1; do
            echo "Waiting for MySQL..."
            sleep 3
          done

      - name: Check test results
        uses: actions/github-script@v1
        with:
          script: |
            if (github.event && github.event.pull_request) {
              if (github.event.pull_request.head.sha !== github.sha) {
                throw new Error('The pull request head SHA does not match the workflow run SHA.')
              }

              const testResults = await getTestResults()
              if (!testResults.success) {
                throw new Error('The tests failed.')
              }

              console.log('The tests passed.')
            } else {
              // Handle non-Pull Request event
            }
