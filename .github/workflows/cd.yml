name: cd

on:
  pull_request:
    branches:
      - dev2

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up .env file
        run: |
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env
          echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env
          echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> .env
          echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env

      - name: create application.yml
        run: |
          echo '${{ secrets.DEV_APPLICATION_YML }}' > src/main/resources/application.yml

      - name: create application-secret.yml
        run: |
          touch src/main/resources/application-secret.yml
          echo '${{ secrets.DEV_APPLICATION_SECRET_YML }}' >> src/main/resources/application-secret.yml

      # AWS 인증 옵션
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
          
      # AWS ECR에 로그인하여 Docker 이미지를 푸시하도록 인증
      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_REGISTRY }}

      # Docker 이미지를 빌드하고 SHA 태그와 latest 태그 추가
      - name: Build and tag Docker image
        run: |
          docker build -t ${{ secrets.AWS_ECR_REGISTRY }}/moa-dev:${{ github.sha }} .
          docker tag ${{ secrets.AWS_ECR_REGISTRY }}/moa-dev:${{ github.sha }} ${{ secrets.AWS_ECR_REGISTRY }}/moa-dev:latest

      # 빌드된 Docker 이미지를 AWS ECR에 푸시
      - name: Push Docker image to Amazon ECR
        run: |
          docker push ${{ secrets.AWS_ECR_REGISTRY }}/moa-dev:${{ github.sha }}
          docker push ${{ secrets.AWS_ECR_REGISTRY }}/moa-dev:latest

      - name: Image Check
        run: |
          docker build -t ${{ secrets.AWS_ECR_REGISTRY }}/moa-dev:${{ github.sha }} .
          docker tag ${{ secrets.AWS_ECR_REGISTRY }}/moa-dev:${{ github.sha }} ${{ secrets.AWS_ECR_REGISTRY }}/moa-dev:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      # AWS 인증 옵션
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      # LightSail 접근하여 배포
      - name: SSH Commands to Lightsail
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.LIGHTSAIL_HOST }}
          username: ${{ secrets.LIGHTSAIL_USERNAME }}
          key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
          port: ${{ secrets.LIGHTSAIL_PORT }}
          script: |
            aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_REGISTRY }}
            docker pull ${{ secrets.AWS_ECR_REGISTRY }}/moa-dev:latest
            docker stop ${{ secrets.AWS_ECR_REGISTRY }}/moa-dev || true
            docker rm ${{ secrets.AWS_ECR_REGISTRY }}/moa-dev || true
            docker run -d —name moa-dev -p 80:80 ${{ secrets.AWS_ECR_REGISTRY }}/moa-dev:latest
